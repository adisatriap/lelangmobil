name: Robot Framework Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install additional dependencies if needed
          pip install -r requirements.txt

      - name: Run Robot Framework tests
        env:
          WORK_TOKEN: ${{ secrets.GIT_TOKEN }}
          TZ: Asia/Ho_Chi_Minh
        run: |
          if ! robot --outputdir results --exclude skip tests/; then
              echo "Robot Framework tests failed. Rerunning failed tests..."
              if [ -f results/output.xml ]; then
                  robot --rerunfailed results/output.xml --outputdir results_rerun tests/ || true
                  if [ -f results_rerun/output.xml ]; then
                      rebot --output results/output.xml --log results/log.html --report results/report.html --merge results/output.xml results_rerun/output.xml
                  else
                      echo "No output.xml file found from rerun. Skipping merge."
                  fi
              else
                  echo "No output.xml file found. Cannot rerun failed tests."
              fi
          fi

          echo "Script execution completed"
        continue-on-error: true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: ./results
          name: robot-test-results
          retention-days: 3

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install Robot Framework linting tools
      run: |
        pip install robotframework-lint
        pip install robotframework-tidy
        
    - name: Lint Robot files
      run: |
        rflint --ignore TooManyTestSteps --ignore LineTooLong tests/ resources/
        
    - name: Format Robot files
      run: |
        robotidy tests/ resources/ --overwrite

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Bandit security scan
      run: |
        pip install bandit
        bandit -r . -f json -o bandit-report.json || true
        
    - name: Run Safety check
      run: |
        pip install safety
        safety check --json --output safety-report.json || true
        
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report
        path: |
          safety-report.json
          bandit-report.json
